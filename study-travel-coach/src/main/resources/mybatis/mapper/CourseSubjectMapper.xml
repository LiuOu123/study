<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kgc.study.studytravelcoach.mapper.CourseSubjectMapper" >
  <resultMap id="BaseResultMap" type="com.kgc.study.bean.CourseSubject" >
    <id column="course_id" property="courseId" jdbcType="BIGINT" />
    <result column="course_subject_gmt_create" property="courseSubjectGmtCreate" jdbcType="TIMESTAMP" />
    <result column="course_subject_gmt_modified" property="courseSubjectGmtModified" jdbcType="TIMESTAMP" />
    <result column="subject_id" property="subjectId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    course_id, course_subject_gmt_create, course_subject_gmt_modified, subject_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.kgc.study.bean.CourseSubjectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course_subject
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from course_subject
    where course_id = #{courseId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from course_subject
    where course_id = #{courseId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.kgc.study.bean.CourseSubjectExample" >
    delete from course_subject
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kgc.study.bean.CourseSubject" >
    insert into course_subject (course_id, course_subject_gmt_create, 
      course_subject_gmt_modified, subject_id)
    values (#{courseId,jdbcType=BIGINT}, #{courseSubjectGmtCreate,jdbcType=TIMESTAMP}, 
      #{courseSubjectGmtModified,jdbcType=TIMESTAMP}, #{subjectId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kgc.study.bean.CourseSubject" >
    insert into course_subject
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="courseSubjectGmtCreate != null" >
        course_subject_gmt_create,
      </if>
      <if test="courseSubjectGmtModified != null" >
        course_subject_gmt_modified,
      </if>
      <if test="subjectId != null" >
        subject_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseId != null" >
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="courseSubjectGmtCreate != null" >
        #{courseSubjectGmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="courseSubjectGmtModified != null" >
        #{courseSubjectGmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="subjectId != null" >
        #{subjectId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kgc.study.bean.CourseSubjectExample" resultType="java.lang.Integer" >
    select count(*) from course_subject
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course_subject
    <set >
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=BIGINT},
      </if>
      <if test="record.courseSubjectGmtCreate != null" >
        course_subject_gmt_create = #{record.courseSubjectGmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.courseSubjectGmtModified != null" >
        course_subject_gmt_modified = #{record.courseSubjectGmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.subjectId != null" >
        subject_id = #{record.subjectId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course_subject
    set course_id = #{record.courseId,jdbcType=BIGINT},
      course_subject_gmt_create = #{record.courseSubjectGmtCreate,jdbcType=TIMESTAMP},
      course_subject_gmt_modified = #{record.courseSubjectGmtModified,jdbcType=TIMESTAMP},
      subject_id = #{record.subjectId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kgc.study.bean.CourseSubject" >
    update course_subject
    <set >
      <if test="courseSubjectGmtCreate != null" >
        course_subject_gmt_create = #{courseSubjectGmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="courseSubjectGmtModified != null" >
        course_subject_gmt_modified = #{courseSubjectGmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="subjectId != null" >
        subject_id = #{subjectId,jdbcType=INTEGER},
      </if>
    </set>
    where course_id = #{courseId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kgc.study.bean.CourseSubject" >
    update course_subject
    set course_subject_gmt_create = #{courseSubjectGmtCreate,jdbcType=TIMESTAMP},
      course_subject_gmt_modified = #{courseSubjectGmtModified,jdbcType=TIMESTAMP},
      subject_id = #{subjectId,jdbcType=INTEGER}
    where course_id = #{courseId,jdbcType=BIGINT}
  </update>
</mapper>